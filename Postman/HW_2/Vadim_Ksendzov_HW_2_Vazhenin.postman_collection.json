{
	"info": {
		"_postman_id": "3274e269-f1cb-41a6-9113-958aedf41327",
		"name": "Vadim_Ksendzov_HW_2_Vazhenin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET_object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//2. Спарсить response body в json.\r",
							"var jsonResp = JSON.parse(responseBody)\r",
							"//3. Спарсить request.\r",
							"var jsonReq = pm.request.url.query.toJSON()\r",
							"console.log(jsonReq)\r",
							"//4. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name_resp = name_req\",function(){\r",
							"pm.expect(jsonResp.name).to.eql(jsonReq[1].value)\r",
							"});\r",
							"//5. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test (\"Check resp_age = req_age\", function (){\r",
							"    pm.expect(jsonResp.age).to.eql(jsonReq[0].value)\r",
							"});\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check resp_salary = req_salary\",function(){\r",
							"    pm.expect(jsonResp.salary).to.eql(Number(jsonReq[2].value))\r",
							"});\r",
							"//7. Вывести в консоль параметр family из response.\r",
							"console.log(jsonResp.family);\r",
							"//8. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Check parametrs name in dog\",function(){\r",
							"    pm.expect(jsonResp.family.pets.dog).to.haveOwnProperty(\"name\")\r",
							"}); \r",
							"//9. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Check resp parametrs age in dog\",function(){\r",
							"    pm.expect(jsonResp.family.pets.dog).to.haveOwnProperty(\"age\")\r",
							"});\r",
							"//10. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Check dog_name = Luky\",function(){\r",
							"    pm.expect(jsonResp.family.pets.dog.name).to.eql(\"Luky\")\r",
							"});\r",
							"//11. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Check dog_age = 4\",function(){\r",
							"    pm.expect(jsonResp.family.pets.dog.age).to.eql(4)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "27",
							"type": "default"
						},
						{
							"key": "name",
							"value": "h4x2win",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?age=27&name=h4x2win&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "name",
							"value": "h4x2win"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Check status code is 200\",function(){\r",
							"    pm.expect(pm.response).to.have.status(200)\r",
							"})\r",
							"//3. Спарсить response body в json.\r",
							"var jsonResp = JSON.parse(responseBody)\r",
							"//4. Спарсить request.\r",
							"var jsonReq = pm.request.url.query.toJSON()\r",
							"console.log(jsonReq)\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check resp_name = req_name\", function(){\r",
							"    pm.expect(jsonResp.name).to.eql(jsonReq[0].value)\r",
							"});\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Check resp_age = req_age\",function(){\r",
							"    pm.expect(jsonResp.age).to.eql(Number(jsonReq[1].value))\r",
							"});\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"console.log(jsonReq[2].value)\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(jsonResp.salary)\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(jsonResp.salary[0])\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(jsonResp.salary[1])\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(jsonResp.salary[2])\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check 0 element from resp_salary = req_salary\",function(){\r",
							"    pm.expect(jsonResp.salary[0]).to.eql(Number(jsonReq[2].value))\r",
							"})\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Check 1 element from resp_salary = req_salary*2\",function(){\r",
							"    pm.expect(Number(jsonResp.salary[1])).to.eql(jsonReq[2].value*2)\r",
							"});\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Check 2 element from resp_salary = resp_salary*3\",function(){\r",
							"    pm.expect(Number(jsonResp.salary[2])).to.eql(jsonReq[2].value*3)\r",
							"})\r",
							"//15. Создать в окружении переменную name  +\r",
							"//16. Создать в окружении переменную age  +\r",
							"//17. Создать в окружении переменную salary  +\r",
							"//18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", jsonResp.name)\r",
							"//19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", jsonResp.age)\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\",jsonResp.salary)\r",
							"pm.environment.set(\"salary\",jsonResp.salary[0])\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"let salary = jsonResp.salary\r",
							"for (let i = 0; i < salary.lenght; i++){\r",
							"    console.log(salary[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "default",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=h4x2win&age=27&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "h4x2win"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"pm.environment.set(\"salary\", \"1000\");\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"var jsonResp = pm.response.json();\r",
							"// 7. Спарсить request.\r",
							"var jsonReq = request.data\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Check jsonresp have start_salary\",function(){\r",
							"    pm.expect(jsonResp).to.have.property(\"start_qa_salary\")\r",
							"});\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Check jsonResp have qa_salary_after_6_months\",function(){\r",
							"    pm.expect(jsonResp).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Check jsonResp have qa_salary_after_12_months\",function(){\r",
							"    pm.expect(jsonResp).to.have.property(\"qa_salary_after_12_months\")\r",
							"});\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Check jsonResp have qa_salary_after_1.5_year\",function(){\r",
							"    pm.expect(jsonResp).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Check jsonResp have qa_salary_after_3.5_years\",function(){\r",
							"    pm.expect(jsonResp).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"});\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Check jsonResp have person\",function(){\r",
							"    pm.expect(jsonResp).to.have.property(\"person\")\r",
							"});\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check jsonResp_start_qa_salary = jsonReq_salary\",function(){\r",
							"    pm.expect(jsonResp.start_qa_salary).to.eql(Number(jsonReq.salary))\r",
							"});\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Check jsonResp_qa_salary_after_6_months = jsonReq_salary\",function(){\r",
							"    pm.expect(jsonResp.qa_salary_after_6_months).to.eql(jsonReq.salary*2)\r",
							"});\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"Check jsonResp_qa_salary_after_12_months = jsonReq_salary\", function(){\r",
							"    pm.expect(jsonResp.qa_salary_after_12_months).to.eql(jsonReq.salary*2.7)\r",
							"});\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"Check jsonResp_qa_salary_after_1.5_year = jsonReq_salary\", function(){\r",
							"    pm.expect(jsonResp[\"qa_salary_after_1.5_year\"]).to.eql(jsonReq.salary*3.3)\r",
							"});\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"Check jsonResp_qa_salary_after_3.5_years = jsonReq_salary\", function(){\r",
							"    pm.expect(jsonResp[\"qa_salary_after_3.5_years\"]).to.eql(jsonReq.salary*3.8)\r",
							"});\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check jsonResp_person_1_elements_u_name = jsonReq_salary\", function(){\r",
							"    pm.expect(jsonResp.person.u_name[1]).to.eql(Number(jsonReq.salary))\r",
							"});\r",
							"// 20. Проверить, что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"Check jsonReq_u_age = jsonReq_age\", function(){\r",
							"    pm.expect(jsonResp.person.u_age).to.eql(Number(jsonReq.age))\r",
							"});\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"Check jsonResp_qa_salary_after_1.5_years=jsonReq_salary*4,2\",function(){\r",
							"    pm.expect(jsonResp.person[\"u_salary_5_years\"]).to.eql(jsonReq.salary*4.2)\r",
							"});\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"var person = jsonResp.person\r",
							"console.log(person)\r",
							"for (var i in person){\r",
							"    console.log(i, person[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "default"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"var jsonResp = JSON.parse(responseBody);\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Check resp_name = name\", function (){\r",
							"    pm.expect(jsonResp.name).to.eql(\"h4x2win\")\r",
							"});\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Check resp_age = age\", function(){\r",
							"    pm.expect(jsonResp.age).to.include(27)\r",
							"});\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Check resp_salary = salary\", function(){\r",
							"    pm.expect(jsonResp.salary).to.eql(1000)\r",
							"});\r",
							"//7. Спарсить request.\r",
							"jsonReq = request.data\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check resp_name = req_name\",function(){\r",
							"    pm.expect(jsonResp.name).to.eql(jsonReq.name)\r",
							"});\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check resp_age = req.age\",function(){\r",
							"    pm.expect(jsonResp.age).to.eql(jsonReq.age)\r",
							"});\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check resp_salary = req_salary\",function(){\r",
							"    pm.expect(jsonResp.salary).to.eql(Number(jsonReq.salary))\r",
							"});\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(jsonResp.family);\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Check resp_salary_1_5_year=salary*4\", function(){\r",
							"    pm.expect(jsonResp.family.u_salary_1_5_year).to.eql(jsonReq.salary*4)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "h4x2win",
							"type": "default"
						},
						{
							"key": "age",
							"value": "27",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		}
	]
}